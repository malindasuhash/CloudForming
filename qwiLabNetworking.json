{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "Launching multiple subnets in a VPC",
   
    "Parameters" : {
        "NATInstanceType" : {
            "Type" : "String",
            "Description" : "Instance type of the NAT instance",
            "Default" : "m1.small",
            "AllowedValues" : [ "m1.small", "m1.medium" ]
        },
        
        "CorpotateCidrIP" : {
          "Type" : "String",
          "Description" : "Traffic restictions",
          "Default" : "0.0.0.0/0"  
        }
    },
    
    "Mappings" : {
        "AWSInstanceType2Arc" : {
            "m1.small" : { "Arch" : "64" },
            "m1.medium" : { "Arch" : "64" }
        },
        "AWSRegionArch2AMI" : {
            "us-west-1" : { "64" : "ami-1d2b2958" },
            "us-west-2" : { "64" : "ami-030f4133" }
        }
    },
    
    "Resources" :  {
        "VPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : "10.0.0.0/16"
            }
        },
        
        "InternetGateway" : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                
            }
        },
        
        "GatewayAttachment" : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "InternetGatewayId" : { "Ref" : "InternetGateway" },
                "VpcId" : { "Ref" : "VPC" }
            }
        },
        
        "PublicSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "CidrBlock" : "10.0.0.0/24",
                "VpcId" : { "Ref" : "VPC" },
                "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] }
            }
        },
        
        "PublicSubnet2" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "CidrBlock" : "10.0.10.0/24",
                "VpcId" : { "Ref" : "VPC" },
                "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] }
            }
        },
        
        "PrivateSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "CidrBlock" : "10.0.11.0/24",
                "VpcId" : { "Ref" : "VPC" },
                "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }] }
            }
        },
        
        "PrivateSubnet2" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "CidrBlock" : "10.0.1.0/24",
                "VpcId" : { "Ref" : "VPC" },
                "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }] }
            }
        },
        
        "PublicRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" }
            }
        },
        
        "PrivateRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" }
            }
        },
        
        "PublicRoute" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PublicRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "InternetGateway" }
            }
        },
        
        "PrivateRoute" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "InstanceId" : { "Ref" : "NAT" }
            }
        },
        
        "PublicSubnetRouteTableAssociation1" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PublicRouteTable" },
                "SubnetId" : { "Ref" : "PublicSubnet1" }
            }
        },
        
        "PublicSubnetRouteTableAssociation2" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PublicRouteTable" },
                "SubnetId" : { "Ref" : "PublicSubnet2" }
            }
        },
        
        "PrivateSubnetRouteTableAssociation1" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateRouteTable" },
                "SubnetId" : { "Ref" : "PrivateSubnet1" }
            }
        },
        
        "PrivateSubnetRouteTableAssociation2" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateRouteTable" },
                "SubnetId" : { "Ref" : "PrivateSubnet2" }
            }
        },
        
        "PublicSubnetAcl" : {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" }
            }
        },
        
         "PrivateSubnetAcl" : {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" }
            }
        },
        
        "PublicInSubnetAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "CidrBlock" : "0.0.0.0/0",
                "Egress" : "false",
                "Icmp" : { "Code" : "-1", "Type" : "-1" },
                "NetworkAclId" : { "Ref" : "PublicSubnetAcl" },
                "PortRange" : { "From" : "1", "To" : "65535" },
                "Protocol" : "-1",
                "RuleAction" : "allow",
                "RuleNumber" : "3200"
            }
        },
            
        "PublicOutSubnetAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "CidrBlock" : "0.0.0.0/0",
                "Egress" : "true",
                "Icmp" : { "Code" : "-1", "Type" : "-1" },
                "NetworkAclId" : { "Ref" : "PublicSubnetAcl" },
                "PortRange" : { "From" : "1", "To" : "65535" },
                "Protocol" : "-1",
                "RuleAction" : "allow",
                "RuleNumber" : "3200"
            }
        },
        
        "PrivateInSubnetAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "CidrBlock" : "0.0.0.0/0",
                "Egress" : "false",
                "Icmp" : { "Code" : "-1", "Type" : "-1" },
                "NetworkAclId" : { "Ref" : "PrivateSubnetAcl" },
                "PortRange" : { "From" : "1", "To" : "65535" },
                "Protocol" : "-1",
                "RuleAction" : "allow",
                "RuleNumber" : "3200"
            }
        },
        
        "PrivateOutSubnetAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "CidrBlock" : "0.0.0.0/0",
                "Egress" : "true",
                "Icmp" : { "Code" : "-1", "Type" : "-1" },
                "NetworkAclId" : { "Ref" : "PrivateSubnetAcl" },
                "PortRange" : { "From" : "1", "To" : "65535" },
                "Protocol" : "-1",
                "RuleAction" : "allow",
                "RuleNumber" : "3200"
            }
        },
        
        "PublicSubnetAclAssociation1" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "PublicSubnet1" },
                "NetworkAclId" : { "Ref" : "PublicSubnetAcl" }
            }
        },
        
        "PublicSubnetAclAssociation2" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "PublicSubnet2" },
                "NetworkAclId" : { "Ref" : "PublicSubnetAcl" }
            }
        },
        
        "PrivateSubnetAclAssociation1" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "PrivateSubnet1" },
                "NetworkAclId" : { "Ref" : "PrivateSubnetAcl" }
            }
        },
        
        "PrivateSubnetAclAssociation2" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "PrivateSubnet2" },
                "NetworkAclId" : { "Ref" : "PrivateSubnetAcl" }
            }
        },
        
        "NAT" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "InstanceType" : { "Ref" : "NATInstanceType" },
                "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arc", { "Ref" : "NATInstanceType" }, "Arch"  ] } ] },
                "SubnetId" : { "Ref" : "PublicSubnet1" },
                "SourceDestCheck" : "false",
                "DisableApiTermination" : "true",
                "SecurityGroupIds" : [ { "Ref" : "NATSecurityGroup" } ]
            }
        },
        
        "NATIP" : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "vpc",
                "InstanceId" : { "Ref" : "NAT" }
            }
        },
        
        "NATSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Security group for NAT",
                "VpcId" : { "Ref" : "VPC" },
                "SecurityGroupIngress" : [{ "IpProtocol" : "-1", "FromPort" : "1", "ToPort" : "65535", "SourceSecurityGroupId" : { "Ref" : "PrivateSG" } }, { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "SourceSecurityGroupId" : { "Ref" : "PrivateSG" } }]
            }
        },
        
        "PrivateSG" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Private security group for NAT instance",
                "VpcId" : { "Ref" : "VPC" },
                "SecurityGroupIngress" : [ { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" }, { "IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : "0.0.0.0/0" }, { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" : "0.0.0.0/0" } ]
            }
        },
        
        "BastianSG" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Bastian security group",
                "VpcId" : { "Ref" : "VPC" },
                "SecurityGroupIngress" : [ { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "CorpotateCidrIP" } }, { "IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "CorpotateCidrIP" } }, { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" : { "Ref" : "CorpotateCidrIP" } } ]
            }
        }
    },
    
    "Outputs" : {
        "VPCInfo" : {
            "Description" : "VPC",
            "Value" : { "Ref" : "VPC" }
        }
    }
}